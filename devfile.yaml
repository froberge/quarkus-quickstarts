apiVersion: 1.0.0
metadata:
  generateName: quarkus-quickstarts-
projects:
  -
    name: quarkus-quickstarts
    source:
      type: git
      location: "https://github.com/froberge/quarkus-quickstarts"
      branch: main
components:
  - id: redhat/vscode-yaml/latest
    type: chePlugin
  - id: redhat/vscode-xml/latest
    type: chePlugin
  - id: redhat/java11/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - type: dockerimage
    alias: centos-quarkus-maven
    image: quay.io/eclipse/che-quarkus:ce0526f
    env:
      - name: JAVA_OPTS
        value: "-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
          -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/user"
      - name: MAVEN_OPTS
        value: $(JAVA_OPTS)
      - name: QUARKUS_HTTP_HOST
        value: 0.0.0.0
    memoryLimit: 4G
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/user/.m2
    endpoints:
      - name: 'hello-greeting-endpoint'
        port: 8080
        attributes:
          path: /hello/greeting/che-user
      - name: 'debug'
        port: 5005
        attributes:
          public: 'false'
  - type: dockerimage
    alias: ubi-minimal
    image: 'registry.access.redhat.com/ubi8/ubi-minimal'
    memoryLimit: 32M
    mountSources: true
    endpoints:
      - name: 'hello-greeting-endpoint'
        port: 8080
        attributes:
          path: /hello/greeting/che-user
    command: ['tail']
    args: ['-f', '/dev/null']
  - type: dockerimage
    alias: mysql
    image: 'registry.redhat.io/rhel8/mysql-80:latest'
    env:
      - name: MYSQL_USER
        value: shop
      - name: MYSQL_PASSWORD
        value: shop
      - name: MYSQL_DATABASE
        value: shop
      - name: PS1
        value: $(echo ${0})\\$
    memoryLimit: 512Mi
    endpoints:
      - name: mysql
        port: 3306
commands:
  - name: Package
    actions:
      - type: exec
        component: centos-quarkus-maven
        command: "./mvnw package"
        workdir: ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/getting-started
  - name: Start Development mode (Hot reload + debug)
    actions:
      - type: exec
        component: centos-quarkus-maven
        command: "./mvnw compile quarkus:dev"
        workdir: ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/getting-started
  - name: Package Native
    actions:
      - type: exec
        component: centos-quarkus-maven
        command: "./mvnw package -Dnative -Dmaven.test.skip -Dquarkus.native.native-image-xmx=2G"
        workdir: ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/getting-started
  - name: Start Native
    actions:
      - type: exec
        component: ubi-minimal
        command: ./getting-started-1.0.0-SNAPSHOT-runner
        workdir: ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/getting-started/target
  - name: 1. Prepare database
    actions:
      - type: exec
        component: mysql
        command: |
          /opt/rh/rh-mysql57/root/usr/bin/mysql -u root < ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/src/main/resources/db/user.sql && \
          /opt/rh/rh-mysql57/root/usr/bin/mysql -u root petclinic < ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/src/main/resources/db/schema.sql && \
          /opt/rh/rh-mysql57/root/usr/bin/mysql -u root petclinic < ${CHE_PROJECTS_ROOT}/quarkus-quickstarts/src/main/resources/db/mysql/data.sql && \
          echo -e "\e[32mDone.\e[0m Database shop was configured!"
  - name: Attach remote debugger
    actions:
      - type: vscode-launch
        referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "type": "java",
                "request": "attach",
                "name": "Attach to Remote Quarkus App",
                "hostName": "localhost",
                "port": 5005
              }
            ]
          }